@model List<CartItem> 
@using Newtonsoft.Json; 

<h4 class="uppercase box-ms-5 mt-5"> Giỏ hàng của bạn</h4>
<!-- Gio hang -->

<div class="d-flex justify-content-center box-px-6">

   <div class=" _bg-white box-p-2 box-my-2 box-me-1">
      <table style="width:850px;">
         <tr>
            <th class="px-3 py-2 w-75"> Sản phẩm </th>
            <th class="px-3 py-2"> Đơn giá </th>
            <th class="px-3 py-2"> Số lượng </th>
            <th class="px-3 py-2">  </th>
         </tr>

         @foreach (var item in Model)
         {
            var p = item.Product;
            <tr id="@p.ID">
               <td class="px-3 py-2">
                  <div class="d-flex">
                     <img src="@p.THUMBNAIL_URL" alt="" style="width:70px;height:70px">
                     <p class="fs14 ms-3"> @p.NAME  </p>
                  </div>
               </td>
               <td class="px-3 py-2">
                  <p class="fw5 fs18"> @(p.UNIT_PRICE - (p.DISCOUNT)) đ</p>
               </td>
               <td class="px-3 py-2">
                  <input type="number" product-id="@item.ProductId" value="@item.Quantity" class="mx-2 bg-inherit text-center p-2 cart-input" style="width: 90px;border-radius: 3px;
                font-size: 14px;border: 1px solid grey;" min="1">
               </td>
               <td class="px-3 py-2">
                  <button onclick="removeFromCart(@p.ID)" class="mx-2 _btn border-danger border _rounded-icon fs12" _used-icon="1">
                     <span class="fs16 text-danger"> X </span>
                  </button>
               </td>
            </tr>
         }
      </table>
   </div>

   <div class="_bg-white box-p-2 box-mt-2 mb-auto" style="min-width: 250px;">

      <div class="d-flex mb-3">
         <span class="fs18 fw5 "> Số lượng: </span>
         <span class="fs18 ms-5 " id="cart-quantity"> @Model.Sum(p => p.Quantity) </span>
      </div>

      <div class="d-flex mb-3">
         <span class="fs18 fw5 "> Tổng: </span>
         <div id="cart-total" class="fs18 ms-5" style="white-space:nowrap"> @Model.Sum(p => p.Quantity*(p.Product.UNIT_PRICE - p.Product.DISCOUNT)) đ</div>
      </div>

      <a class="mt-3 border-top decoration0" href="/dat-hang">
         <button class="rounded-0 btn btn-primary mt-3 btn-lg w-100" onclick="makeOrder()"> Đặt hàng </button>
      </a>

   </div>
</div>


@section Scripts {

   <script>
      var CART_ITEMS = @Html.Raw(JsonConvert.SerializeObject(Model));

      $('input[type="number"].cart-input').change(function (e) {
         var val = $(e.target).val();
         var id = $(e.target).attr('product-id');
         if (val && val <= 0)
            return;
         var item = CART_ITEMS.find(p => p.Product.ID == id);
         item.Quantity = +val;

         updateCartItem(id, 'modify', val);
         updateCartSummary();
      });

      function updateCartSummary() {
         var cartQuantity = CART_ITEMS.reduce((t, v) => t + (+v.Quantity), 0),
            cartTotal = CART_ITEMS.reduce((t, v) => t + v.Quantity*(v.Product.UNIT_PRICE - v.Product.DISCOUNT), 0);

         $('#cart-quantity').html(cartQuantity);
         $('#cart-total').html(cartTotal + " đ");
      }

      function removeFromCart(id) {
         debugger
         $(`#${id}`).remove();
         CART_ITEMS = CART_ITEMS.filter(p => p.Product.ID != id);

         updateCartItem(id, 'remove');
         updateCartSummary();
      }

      function makeOrder(e) {
         if (CART.length == 0) {
            alert("Giỏ hàng trống");
            e.stopPropagation();
         }
      }


   </script>

}
